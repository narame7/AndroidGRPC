# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import exchange_frame_pb2 as exchange__frame__pb2


class VideoStreamerStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.VideoProcess = channel.unary_unary(
        '/videostreamer.VideoStreamer/VideoProcess',
        request_serializer=exchange__frame__pb2.InputVideo.SerializeToString,
        response_deserializer=exchange__frame__pb2.OutputVideo.FromString,
        )
    self.VideoProcessFromC = channel.unary_unary(
        '/videostreamer.VideoStreamer/VideoProcessFromC',
        request_serializer=exchange__frame__pb2.InputVideo.SerializeToString,
        response_deserializer=exchange__frame__pb2.OutputVideo.FromString,
        )
    self.VideoProcessFromAndroid = channel.stream_stream(
        '/videostreamer.VideoStreamer/VideoProcessFromAndroid',
        request_serializer=exchange__frame__pb2.InputVideo.SerializeToString,
        response_deserializer=exchange__frame__pb2.BoundingBox.FromString,
        )


class VideoStreamerServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def VideoProcess(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def VideoProcessFromC(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def VideoProcessFromAndroid(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_VideoStreamerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'VideoProcess': grpc.unary_unary_rpc_method_handler(
          servicer.VideoProcess,
          request_deserializer=exchange__frame__pb2.InputVideo.FromString,
          response_serializer=exchange__frame__pb2.OutputVideo.SerializeToString,
      ),
      'VideoProcessFromC': grpc.unary_unary_rpc_method_handler(
          servicer.VideoProcessFromC,
          request_deserializer=exchange__frame__pb2.InputVideo.FromString,
          response_serializer=exchange__frame__pb2.OutputVideo.SerializeToString,
      ),
      'VideoProcessFromAndroid': grpc.stream_stream_rpc_method_handler(
          servicer.VideoProcessFromAndroid,
          request_deserializer=exchange__frame__pb2.InputVideo.FromString,
          response_serializer=exchange__frame__pb2.BoundingBox.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'videostreamer.VideoStreamer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
